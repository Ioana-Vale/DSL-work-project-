/*
 * generated by Xtext 2.35.0
 */
package ro.acorn.zamolxis.oe.abl.dsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import ro.acorn.zamolxis.oe.demo.abl.Model

@ExtendWith(InjectionExtension)
@InjectWith(OpenEdgeAblInjectorProvider)
class OpenEdgeAblParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			define image testImage file "path/to/image.png" bgcolor "white" tooltip "Test Image" stretch-to-fit retain-shape size 100 by 200.
			                      
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	@Test
	def void loadModel1() {
		val result = parseHelper.parse('''
			define private button myButton auto-go default label "Click Me" font 12 image-down size 100 by 50.		
			                      
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
