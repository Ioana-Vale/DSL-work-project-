/**
 * generated by Xtext 2.35.0
 */
package org.xtext.example.mydsl.myDsl;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Split Function Call</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.SplitFunctionCall#getStr <em>Str</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.SplitFunctionCall#getDelimiter <em>Delimiter</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getSplitFunctionCall()
 * @model
 * @generated
 */
public interface SplitFunctionCall extends StringManipulationFunctionCall
{
	/**
	 * Returns the value of the '<em><b>Str</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Str</em>' containment reference.
	 * @see #setStr(Expression)
	 * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getSplitFunctionCall_Str()
	 * @model containment="true"
	 * @generated
	 */
	Expression getStr();

	/**
	 * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.SplitFunctionCall#getStr <em>Str</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Str</em>' containment reference.
	 * @see #getStr()
	 * @generated
	 */
	void setStr(Expression value);

	/**
	 * Returns the value of the '<em><b>Delimiter</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Delimiter</em>' containment reference.
	 * @see #setDelimiter(StringLiteral)
	 * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getSplitFunctionCall_Delimiter()
	 * @model containment="true"
	 * @generated
	 */
	StringLiteral getDelimiter();

	/**
	 * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.SplitFunctionCall#getDelimiter <em>Delimiter</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Delimiter</em>' containment reference.
	 * @see #getDelimiter()
	 * @generated
	 */
	void setDelimiter(StringLiteral value);

} // SplitFunctionCall
